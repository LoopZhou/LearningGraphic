import{_ as e,r as t,g as n,o as a,c as r,p as o,b as i,a as l}from"./index.312f29aa.js";const s={name:"RenderTriangle",setup(){const e=t("attribute vec4 a_position;\n\nvoid main () {\n  gl_Position = a_position;\n}"),a=t("void main () {\n  gl_FragColor = vec4(1, 0, 0, 1);\n}"),r=(e,t,n)=>{const a=e.createShader(n);return e.shaderSource(a,t),e.compileShader(a),a},o=()=>{if(navigator.gpu)return void(async()=>{const e=await navigator.gpu.requestAdapter(),t=await e.requestDevice(),n=document.getElementById("webgpu").getContext("webgpu");n.configure({device:t,format:"bgra8unorm",compositingAlphaMode:"opaque"});const a={vertex:"\n    @stage(vertex)\n    fn main(@builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n      var pos = array<vec2<f32>, 3>(\n        vec2<f32>(0.0, 1.0),\n        vec2<f32>(-1.0, -1.0),\n        vec2<f32>(1.0, -1.0)\n      );\n      return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n    }\n  ",fragment:"\n    @stage(fragment)\n    fn main() -> @location(0) vec4<f32> {\n      return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n    }\n  "},r=await t.createRenderPipelineAsync({vertex:{module:t.createShaderModule({code:a.vertex}),entryPoint:"main"},fragment:{module:t.createShaderModule({code:a.fragment}),entryPoint:"main",targets:[{format:"bgra8unorm"}]},primitiveTopology:"triangle-list"}),o={colorAttachments:[{view:n.getCurrentTexture().createView(),clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",loadValue:{r:1,g:1,b:1,a:1},storeOp:"store"}]},i=t.createCommandEncoder(),l=i.beginRenderPass(o);l.setPipeline(r),l.draw(3,1,0,0),l.end?l.end():l.endPass();const s=i.finish();t.queue.submit([s])})();const e=document.getElementById("webgpu").getContext("2d");e.font="20px Georgia",e.fillText("Not Support",10,50)};n((()=>{(()=>{const e=document.getElementById("2d").getContext("2d");e.fillStyle="red",e.strokeStyle="red",e.moveTo(0,100),e.lineTo(100,0),e.lineTo(200,100),e.lineTo(0,100),e.stroke(),e.fill()})(),(()=>{const t=document.getElementById("webgl").getContext("webgl2");t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT),t.viewport(0,0,200,100);const n=t.createProgram(),o=r(t,e.value,t.VERTEX_SHADER),i=r(t,a.value,t.FRAGMENT_SHADER);t.attachShader(n,o),t.attachShader(n,i),t.linkProgram(n),t.useProgram(n);const l=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,l),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,0,1]),t.STATIC_DRAW);const s=t.getAttribLocation(n,"a_position");t.vertexAttribPointer(s,2,t.FLOAT,!1,2*Float32Array.BYTES_PER_ELEMENT,0),t.enableVertexAttribArray(s),t.drawArrays(t.TRIANGLES,0,3)})(),o()}))}},c=e=>(o("data-v-110cbf6d"),e=e(),i(),e),d=[c((()=>l("h3",null,"triange - css",-1))),c((()=>l("div",{class:"triangle-css"},null,-1))),c((()=>l("h3",null,"triange - svg",-1))),c((()=>l("svg",{xmlns:"http://www.w3.org/2000/svg",viewport:"0,0,200,100",width:"200",height:"100"},[l("polygon",{points:"0,100 100,0 200,100",style:{fill:"red"}})],-1))),c((()=>l("h3",null,"triange - canvas",-1))),c((()=>l("canvas",{id:"2d",width:"200",height:"100"},null,-1))),c((()=>l("h3",null,"triange - webgl",-1))),c((()=>l("canvas",{id:"webgl",width:"200",height:"100"},null,-1))),c((()=>l("h3",null,"triange - webgpu",-1))),c((()=>l("canvas",{id:"webgpu",width:"200",height:"100"},null,-1)))];var g=e(s,[["render",function(e,t,n,o,i,l){return a(),r("div",null,d)}],["__scopeId","data-v-110cbf6d"]]);export{g as default};
