import{_ as e,r as t,g as r,o as n,c as a,p as o,b as i,a as u}from"./index.0cfecfaf.js";const s=new Float32Array([0,1,0,-1,-1,0,1,-1,0]);class f{constructor(){this.init()}init(){this.checkWebGPU()}checkWebGPU(){if(navigator.gpu)return void this.initWebGPU();const e=document.getElementById("webgpu").getContext("2d");e.font="20px Georgia",e.fillText("Not Support",10,50)}async initWebGPU(){var e;const t=await navigator.gpu.requestAdapter(),r=await(null==t?void 0:t.requestDevice()),n=document.getElementById("webgpu").getContext("webgpu");null==n||n.configure({device:r,format:"bgra8unorm",compositingAlphaMode:"opaque"});const a={vertex:"\n    @stage(vertex)\n    fn main(@location(0) position : vec3<f32>) -> @builtin(position) vec4<f32> {\n      return vec4<f32>(position, 1.0);\n    }\n  ",fragment:"\n    @group(0) @binding(0) var<uniform> color : vec4<f32>;\n\n    @stage(fragment)\n    fn main() -> @location(0) vec4<f32> {\n      return color;\n    }\n  "},o=await r.createRenderPipelineAsync({vertex:{module:r.createShaderModule({code:a.vertex}),entryPoint:"main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]}]},fragment:{module:r.createShaderModule({code:a.fragment}),entryPoint:"main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"}}),i=r.createBuffer({label:"GPUBuffer store vertex",size:s.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});r.queue.writeBuffer(i,0,s);const u=r.createBuffer({label:"GPUBuffer store rgba color",size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});r.queue.writeBuffer(u,0,new Float32Array([1,.5,0,1]));const f=r.createBindGroup({label:"Uniform Group with colorBuffer",layout:o.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:u}}]}),l={colorAttachments:[{view:null==(e=null==n?void 0:n.getCurrentTexture())?void 0:e.createView(),clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",loadValue:{r:1,g:1,b:1,a:1},storeOp:"store"}]},c=r.createCommandEncoder(),d=c.beginRenderPass(l);d.setPipeline(o),d.setBindGroup(0,f),d.setVertexBuffer(0,i),d.draw(3,1,0,0),d.end?d.end():d.endPass();const g=c.finish();r.queue.submit([g])}}const l={name:"ColorTriangle",setup(){t(null),r((()=>{new f}))}},c=e=>(o("data-v-6ea8035d"),e=e(),i(),e),d=[c((()=>u("h3",null,"triange - webgpu",-1))),c((()=>u("canvas",{id:"webgpu",width:"200",height:"100"},null,-1)))];var g=e(l,[["render",function(e,t,r,o,i,u){return n(),a("div",null,d)}],["__scopeId","data-v-6ea8035d"]]);export{g as default};
